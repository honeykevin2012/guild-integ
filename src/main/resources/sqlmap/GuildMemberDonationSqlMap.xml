<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.game.guild.persistence.dao.GuildMemberDonationDao">
	<!--■■■■■■■■■■■■■■■■■■■■Cache■■■■■■■■■■■■■■■■■■■■-->
	<cache type="org.mybatis.caches.ehcache.EhcacheCache"/> 
	<!-- <cache type="org.mybatis.caches.memcached.MemcachedCache"/> -->
	<sql id="commonSelect">
		SELECT id, user_id,
		guild_id, amount, create_time,
		game_id, game_name, server_id, server_name, role_id, role_name
		FROM guild_member_donation
	</sql>
	
	<select id="pageQuery" parameterType="com.game.common.basics.pagination.PageQuery" resultType="com.game.guild.domain.GuildMemberDonation" useCache="false">
		<include refid="commonSelect"/>
			<where>
				<if test="params.id != null and params.id != ''">
					and id = #{params.id}
				</if>
				<if test="params.userId != null and params.userId != ''">
					and user_id = #{params.userId}
				</if>
				<if test="params.guildId != null and params.guildId != ''">
					and guild_id = #{params.guildId}
				</if>
				<if test="params.amount != null and params.amount != ''">
					and amount = #{params.amount}
				</if>
				<if test="params.createTime != null and params.createTime != ''">
					and create_time = #{params.createTime}
				</if>
			</where>
		ORDER BY id DESC 
	</select>
	
	<select id="select" resultType="com.game.guild.domain.GuildMemberDonation" parameterType="int">
		SELECT  id, user_id, guild_id, amount, create_time FROM guild_member_donation WHERE id=#{id}
	</select>
	
	<select id="selectUserDonation" resultType="com.game.guild.domain.GuildMemberDonation" parameterType="com.game.common.basics.pagination.PageQuery">
		select d.id, 
		d.amount as amount,
		DATE_FORMAT(d.create_time,'%Y-%m-%d %T') as create_time,
		d.user_id as user_id,
		(case  when u.nick_name is null or u.nick_name='' then u.user_name else u.nick_name end) as user_name,
		d.guild_id as guild_id,
		d.game_id, d.game_name, d.server_id, d.server_name, d.role_id, d.role_name,
		g.name as guild_name
		from guild_member_donation d 
		left join user u on d.user_id=u.id 
		left join guild_info g on d.guild_id=g.id
		where d.guild_id=#{params.guildId} 
		<if test="params.userId != null and params.userId != ''">
			and d.user_id=#{params.userId}
		</if>
		order by create_time desc
	</select>
	
	<select id="selectByEntity" resultType="com.game.guild.domain.GuildMemberDonation" parameterType="com.game.guild.domain.GuildMemberDonation">
		SELECT  id, user_id, guild_id, amount, create_time FROM guild_member_donation
		<where>
				<if test="id != null and id != ''">
					and id = #{id}
				</if>
				<if test="userId != null and userId != ''">
					and user_id = #{userId}
				</if>
				<if test="guildId != null and guildId != ''">
					and guild_id = #{guildId}
				</if>
				<if test="amount != null and amount != ''">
					and amount = #{amount}
				</if>
				<if test="createTime != null and createTime != ''">
					and create_time = #{createTime}
				</if>
			</where>
		ORDER BY id DESC 
	</select>
	
	<select id="selectAll" resultType="com.game.guild.domain.GuildMemberDonation" parameterType="int">
		SELECT  id, user_id, guild_id, amount, create_time FROM guild_member_donation
	</select>
	
	<insert id="insert" keyProperty="id" useGeneratedKeys="true" parameterType="com.game.guild.domain.GuildMemberDonation">
		INSERT INTO guild_member_donation
		(
		    user_id, guild_id, amount, create_time, game_id, game_name, server_id, server_name, role_id, role_name)
		values 
		(
		    #{userId} , #{guildId} , #{amount} , now(), #{gameId}, #{gameName}, #{serverId}, #{serverName}, #{roleId}, #{roleName}
		)
	</insert>

	<update id="update" parameterType="com.game.guild.domain.GuildMemberDonation">
		UPDATE guild_member_donation 
		SET  id=#{id} , user_id=#{userId} , guild_id=#{guildId} , amount=#{amount} , create_time=#{createTime}  WHERE id=#{id}
	</update>
	<delete id="deleteByUserAndGuild" parameterType="map">
		<![CDATA[
			DELETE FROM guild_member_donation WHERE user_id=#{userId} and guild_id=#{guildId}
		]]>
	</delete>
	<delete id="deleteByGuildId" parameterType="int">
		<![CDATA[
			DELETE FROM guild_member_donation WHERE guild_id=#{guildId}
		]]>
	</delete>
	<delete id="delete" parameterType="int">
		<![CDATA[
			DELETE FROM guild_member_donation WHERE id=#{id}
		]]>
	</delete>
	<delete id="deleteSelect" parameterType="java.lang.Integer">
       	DELETE FROM guild_member_donation WHERE id IN
		<foreach collection="array" item="ids" open="(" separator="," close=")">
			#{ids}
		</foreach>
	</delete>
</mapper>
