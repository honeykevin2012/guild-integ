<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.game.guild.persistence.dao.GuildItemsStockDao">
	<!--■■■■■■■■■■■■■■■■■■■■Cache■■■■■■■■■■■■■■■■■■■■-->
	<cache type="org.mybatis.caches.ehcache.EhcacheCache"/> 
	<!-- <cache type="org.mybatis.caches.memcached.MemcachedCache"/> -->
	<sql id="commonSelect">
		SELECT
		  s.id,
		  s.guild_id,
		  s.item_id,
		  s.start_time,
		  s.end_time,
		  s.count,
		  s.gived,
		  s1.type_id,
		  s1.name,
		  s1.is_virtual,
		  s1.remark
		FROM guild_items_stock s
		  LEFT JOIN (SELECT
		               gi.id,
		               gi.name,
		               gi.is_virtual,
		               gi.type_id,
		               act.remark
		             FROM guild_item gi
		               LEFT JOIN user_active_code_type act
		                 ON gi.type_id = act.id) s1
		    ON s.item_id = s1.id
	</sql>
	
	<select id="pageQuery" parameterType="com.game.common.basics.pagination.PageQuery" resultType="com.game.guild.domain.GuildItemsStock" useCache="false">
		<include refid="commonSelect"/>
			<where>
				<if test="params.id != null and params.id != ''">
					and s.id = #{params.id}
				</if>
				<if test="params.guildId != null and params.guildId != ''">
					and s.guild_id = #{params.guildId}
				</if>
				<if test="params.itemId != null and params.itemId != ''">
					and s.item_id = #{params.itemId}
				</if>
				<if test="params.isVirtual != null and params.isVirtual != ''">
					and s1.is_virtual = #{params.isVirtual}
				</if>				
			</where>
		ORDER BY s.id DESC 
	</select>
	
	<select id="select" resultType="com.game.guild.domain.GuildItemsStock" parameterType="int">
		SELECT  id, guild_id, item_id,start_time,end_time,count,gived FROM guild_items_stock WHERE id=#{id}
	</select>
	
	<select id="selectByEntity" resultType="com.game.guild.domain.GuildItemsStock" parameterType="com.game.guild.domain.GuildItemsStock">
		SELECT  id, guild_id, item_id,start_time,end_time,count,gived FROM guild_items_stock
		<where>
				<if test="id != null and id != ''">
					and id = #{id}
				</if>
				<if test="guildId != null and guildId != ''">
					and guild_id = #{guildId}
				</if>
				<if test="itemId != null and itemId != ''">
					and item_id = #{itemId}
				</if>
			</where>
		ORDER BY id DESC 
	</select>
	
	<select id="selectAll" resultType="com.game.guild.domain.GuildItemsStock" parameterType="int">
		SELECT  id, guild_id, item_id,start_time,end_time,count,gived FROM guild_items_stock
	</select>

	<select id="selectGetGiftList" resultType="com.game.guild.domain.GuildItemsStock" parameterType="Map">
		<![CDATA[
		SELECT
		  s1.*
		FROM (SELECT
		        s.id,
		        s.guild_id,
		        s.item_id,
		        s.start_time,
		        s.end_time,
		        s.count,
		        s.gived,
		        i.name,
		        i.is_virtual,
		        i.remark,
		        (s.count - s.gived) AS remain
		      FROM guild_items_stock s
		        LEFT JOIN (SELECT
		                     gi.id,
		                     gi.name,
		                     gi.is_virtual,
		                     act.remark
		                   FROM guild_item gi
		                     LEFT JOIN user_active_code_type act
		                       ON gi.type_id = act.id
		                   WHERE gi.is_virtual = 1) i
		          ON s.item_id = i.id
		      WHERE i.is_virtual = 1
		          AND s.guild_id = #{guildId}) s1
		  RIGHT JOIN (SELECT DISTINCT
		                (iv.item_id) AS item_id
		              FROM guild_item_virtual iv
		                LEFT JOIN guild_item gi
		                  ON iv.item_id = gi.id
		              WHERE gi.guild_id = #{guildId}
		                  AND iv.status = '1'
		                  AND iv.item_id NOT IN(SELECT
		                                          item_id
		                                        FROM guild_item_virtual
		                                        WHERE user_id = #{userId}
		                                            AND STATUS = '3')) s2
		    ON s1.item_id = s2.item_id
		    WHERE s1.remain>0
		    ]]>
	</select>
	
	<insert id="insert" keyProperty="id" useGeneratedKeys="true" parameterType="com.game.guild.domain.GuildItemsStock">
		INSERT INTO guild_items_stock
		(
		    guild_id, item_id,start_time,end_time,count,gived)
		values 
		(
		    #{guildId} , #{itemId} , #{startTime}  , #{endTime}  , #{count} ,0 
		)
	</insert>

	<update id="update" parameterType="com.game.guild.domain.GuildItemsStock">
		UPDATE guild_items_stock 
		SET  id=#{id} , guild_id=#{guildId} , item_id=#{itemId}  WHERE id=#{id}
	</update>

	<update id="updateGetGift" parameterType="int">
		UPDATE guild_items_stock 
		SET  gived=gived+1  WHERE id=#{id}
	</update>
	
	<delete id="delete" parameterType="int">
		<![CDATA[
			DELETE FROM guild_items_stock WHERE id=#{id}
		]]>
	</delete>
	<delete id="deleteSelect" parameterType="java.lang.Integer">
       	DELETE FROM guild_items_stock WHERE id IN
		<foreach collection="array" item="ids" open="(" separator="," close=")">
			#{ids}
		</foreach>
	</delete>
</mapper>
